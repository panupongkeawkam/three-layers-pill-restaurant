<!DOCTYPE html>
<html lang="en">

<%- include('header') %>

  <body>
    <div id="app" class="container bg-light" ref="container">
      <div class="row text-center d-flex flex-column justify-content-center align-items-center pt-5" ref="rowTop">
        <h1 class="fs-1 fw-bold mb-3">Three Layers Pill</h1>
        <p class="text-muted">Thai restaurant with greatness raw material import directly from Thailand, taste like
          thai,
          smile
          like bangkok.</p>
      </div>
      <div class="row d-flex justify-content-center px-2" ref="rowCenter">
        <div class="col-xxl-6 col-12">
          <a @click="fetchGuest()" class="btn btn-outline-dark py-3 fw-bold w-100" type="button">GUEST
            CUSTOMER</a>
          <div class="d-flex my-3">
            <hr style="width: 100%">
            <span class="text-center text-muted px-3 d-flex align-items-center"
              style="width: auto; font-size: .75em; white-space: nowrap;">OR
              BENEFIT WITH</span>
            <hr style="width: 100%">
          </div>
          <button class="btn py-3 text-light fw-bold w-100" style="background: #ffa723" @click="toggleMemberLogin()"
            ref="memberLoginButton">MEMBER CUSTOMER</button>
          <form class="p-3 border border-top-0 rounded-bottom mb-3" :action="'/table/' + tableNo + '/login'"
            method="POST" style="font-size: .8em; transform-origin: top" ref="memberLoginForm">
            <div class="mb-3">
              <label class="form-label text-muted">Phone Number</label>
              <input type="number" class="form-control" name="phoneNumber" v-model="phoneNumber"
                :class="{'border border-danger': error}" required>
            </div>
            <div class="mb-4">
              <label class="form-label text-muted">Password</label>
              <input type="password" class="form-control" name="password" v-model="password"
                :class="{'border border-danger': error}" required>
            </div>
            <div class="form-text text-danger mb-3" v-if="error">*User identifier invalid.</div>
            <button type="submit" class="btn btn-light border fw-bold text-muted">SUBMIT</button>
          </form>
        </div>
      </div>
    </div>
  </body>

  <script>
    var app = new Vue({
      el: '#app',
      data: {
        phoneNumber: '',
        password: '',
        showMemberLogin: false,
        tableNo: null,
        error: null
      },
      methods: {
        toggleMemberLogin() {
          this.showMemberLogin = !this.showMemberLogin
          if (this.showMemberLogin) {
            this.$refs.memberLoginButton.style.borderRadius = '.25em .25em 0 0'
            this.$refs.memberLoginForm.style.animation = 'slide-down .3s'
            this.$refs.memberLoginForm.style.visibility = 'visible'
            setTimeout(() => {
              window.scrollTo(0, 3000)
            }, 300)
          } else if (!this.showMemberLogin) {
            this.$refs.memberLoginButton.style.borderRadius = '.25em'
            this.$refs.memberLoginForm.style.animation = 'slide-up .3s'
            setTimeout(() => {
              window.scrollTo(0, 0)
              this.$refs.memberLoginForm.style.visibility = 'hidden'
            }, 300)
          }
        },
        async fetchGuest() {
          fetch(`/table/${this.tableNo}/guest`, { method: 'POST' })
            .then(res => res.text())
            .then(res => {
              if (res === 'success') {
                window.location.href = `/table/${this.tableNo}/menu`
              }
            })
            .catch(err => {
              console.log(err)
            })
        }
      },
      created() {
        this.tableNo = `<%- tableNo %>`
        this.error = `<%- error %>` === 'true'
      },
      mounted() {
        this.$refs.container.style.minHeight = window.innerHeight + 'px'
        this.$refs.rowTop.style.height = window.innerHeight * 0.4 + 'px'
        this.$refs.rowCenter.style.minHeight = window.innerHeight * 0.6 + 'px'
        this.$refs.memberLoginForm.style.visibility = 'hidden'

        window.onresize = (event) => {
          this.showMemberLogin = false
          this.$refs.container.style.minHeight = window.innerHeight + 'px'
          this.$refs.rowTop.style.height = window.innerHeight * 0.4 + 'px'
          this.$refs.rowCenter.style.height = window.innerHeight * 0.6 + 'px'
        }

        if (this.error) {
          this.toggleMemberLogin()
        }
      }
    })
  </script>

</html>